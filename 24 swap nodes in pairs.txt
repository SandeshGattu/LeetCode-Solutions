# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        h1=head
        k=[]
        while(h1):
            k.append(h1.val)
            h1=h1.next
        
        
        if len(k)<=1:
            return head
        head1=ListNode(k[1])
        k1=head1
        j1=ListNode(k[0])
        head1.next=j1
        head1=head1.next
        if len(k)%2==0:
            for i in range(2,len(k),2):
                m1=ListNode(k[i])
                m2=ListNode(k[i+1])
                head1.next=m2
                head1=head1.next
                head1.next=m1
                head1=head1.next
        else:
            for i in range(2,len(k)-1,2):
                m1=ListNode(k[i])
                m2=ListNode(k[i+1])
                head1.next=m2
                head1=head1.next
                head1.next=m1
                head1=head1.next
            m2=ListNode(k[-1])
            head1.next=m2
            
            
            
        return k1
            
            
            