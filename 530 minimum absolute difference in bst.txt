# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def getMinimumDifference(self, root: TreeNode) -> int:
        
        
        m=float("inf")
        d=[]
        f=0
        
        def inorder(a):
            if a:
                inorder(a.left)
                d.append(a.val)
                if len(d)>1 and d[-1]-d[-2]==0:
                    f=1
                    a=None
                inorder(a.right)
            
        inorder(root)
        if f==1:
            return 0
        for i in range(len(d)-1):
            if d[i+1]-d[i]==0:
                return 0
            if d[i+1]-d[i]<m:
                m=d[i+1]-d[i]
        return m
                
        