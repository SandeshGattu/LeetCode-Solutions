# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        l=[]
        h=head
        while(h):
            l.append(h.val)
            h=h.next
        m=len(l)
        if m==0:
            return h
        if k%m==0:
            return head
        k=k%m
        new=l[m-k:]+l[:m-k]
        head1=ListNode(new[0])
        k1=head1
        for i in range(1,len(new)):
            m1=ListNode(new[i])
            k1.next=m1
            k1=k1.next
        return head1
        
        