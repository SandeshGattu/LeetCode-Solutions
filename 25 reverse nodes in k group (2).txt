# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseKGroup(self, head: ListNode, k: int) -> ListNode:
        
        if head is None:
            return head
        def getk(a):
            n=a
            i=0
            while n and i<k-1:
                i+=1
                n=n.next
            if n is None:
                return a
            b=n.next
            n.next=None
            nh=reverse(a)
            a.next=getk(b)
            return nh
        def reverse(a):
            d=None
            while a:
                b=a.next
                a.next=d
                d=a
                a=b
            return d
        return getk(head)
                
            
                
                
        