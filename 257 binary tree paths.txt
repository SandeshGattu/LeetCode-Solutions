# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def binaryTreePaths(self, root: TreeNode) -> List[str]:
        d=[]
        def getres(a,k):
            if a is None:
                st=k[:]
                d.append(st)
            k.append(a.val)
            if a.left is None and a.right is None:
                st=""
                m=k[:]
                st+=str(m[0])
                for i in k[1:]:
                    st+=str("->"+str(i))
                d.append(st)
            if a.left:
                getres(a.left,k)
                k.pop(-1)
            if a.right:
                getres(a.right,k)
                k.pop(-1)
        if root is None:
            return d
        getres(root,[])
        return d
                
        